# !! update of rust version should be carried out together with rust-activation version update !!
# https://github.com/AnacondaRecipes/rust-activation-feedstock
{% set version = "1.87.0" %}

package:
  name: 'rust-suite'
  version: {{ version }}

source:
    #### start of main rust toolchain sources
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux64]
    sha256: 1f6f18ce19387c42968a474cf175e67f99280614ded9c752d5d2e37af3204bcd  # [linux64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.gz  # [aarch64]
    sha256: 2c66e31d774a0dcd4422db74584ebc6362ff3ae90c452caff9d2fb912c821e8d  # [aarch64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    sha256: 867a84a93c6ba0b468b78b52004a6307d6f5e2e5598e64f65726c6810b6f7c82  # [osx and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    sha256: 249496972e6f845f052036b9d7e73f816418412de2b266ec717b9050c1810dc3  # [osx and arm64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win]
    sha256: 05216dee147b79705629dbf75dee172bf98f316b5c5d038541e60c4a55796cb4  # [win]
    folder: msvc  # [win]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-gnu.tar.gz  # [win64]
    sha256: 824eeb48568ed3c7da7c1cd06e3cad2077dbdfbb515be39830dfbc53576d49b4  # [win64]
    folder: gnu  # [win]
    #### end of main rust toolchain sources
    #### start of rust-std-extra toolchain sources
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-wasip1.tar.gz
    sha256: ff7eeca44ad18538f17c5382613f140fc2c718ff4b21ea06f06de48729ae7a4a
    folder: rust-std-wasm32-wasip1
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-wasip2.tar.gz
    sha256: 720fb7751cb9baaf45bc5358d211482a40cff1d1aaa89cabea7b48557db08d35
    folder: rust-std-wasm32-wasip2
    #### end of rust-std-extra toolchain sources

build:
  number: 0

outputs:
  - name: rust
    script: install-msvc.bat  # [win]
    script: install-unix.sh  # [not win]
    build:
      run_exports: # [osx and x86_64]
        strong_constrains: # [osx and x86_64]
          - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.12") }}  # [osx and x86_64]
      # The distributed binaries are already relocatable
      binary_relocation: False
      runpath_whitelist:
        - $ORIGIN/../lib
      missing_dso_whitelist:
        - /usr/lib/libresolv.9.dylib
        - /usr/lib/libc++.1.dylib
        - /usr/lib/libc++abi.dylib
        - /usr/lib/libiconv.2.dylib
        - /usr/lib/libcurl.4.dylib
        - /usr/lib/libxar.1.dylib
        - $RPATH/libLLVM-14-rust-1.64.0-stable.so
        # Since 1.32.0 macOS also needs:
        - /System/Library/Frameworks/Python.framework/Versions/2.7/Python
        - /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
        - /usr/lib/libcompression.dylib
        - /usr/lib/libedit.3.dylib
        - /usr/lib/libform.5.4.dylib
        - /usr/lib/libncurses.5.4.dylib
        - /usr/lib/libpanel.5.4.dylib
        - /usr/lib/libxml2.2.dylib
        # Fixed via install_name_tool now (just declaring it here meant the thing using -
        # lib/rustlib/x86_64-apple-darwin/lib/python2.7/site-packages/lldb/lldb-argdumper - was
        # still unable to find it at runtime).
        # - $RPATH/libLLVM.dylib

        - '**/ld-linux-x86-64.so.2'
        - '**/libc.so.6'
        - '**/libdl.so.2'
        - '**/ld64.so.*'
        - '**/libgcc_s.so.1'
        - '**/libm.so.6'
        - '**/libpthread.so.0'
        - '**/librt.so.1'
        - '**/libgcc_s.so.1'
        - '**/libz.so.1'
        # Since 1.32.0 linux also needs:
        - '**/libstdc++.so.6'
        - '*/api-ms-win-core-winrt-l1-1-0.dll'  # [win]
        - '*/api-ms-win-core-winrt-error-l1-1-0.dll'  # [win]
    requirements:
      build:
        - {{ compiler('c') }}    # [osx]
        - posix  # [win]
    test:
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      files:
        - forge_test.sh  # [not win]
      commands:
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]
        - rustc --version
        - cargo --help
        - rustc --help
        - rustdoc --help
        - time bash ./forge_test.sh  # [not win]

  - name: rust-gnu  # [win]
    script: install-gnu.bat  # [win]
    build:  # [win]
      # the distributed binaries are already relocatable
      binary_relocation: False  # [win]
    requirements:  # [win]
      build:  # [win]
        - posix # [win]
    test:  # [win]
      commands:  # [win]
        - rustc --version  # [win]
        - cargo --help  # [win]
        - rustc --help  # [win]
        - rustdoc --help  # [win]
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]

  - name: rust-std-{{ rust_std_extra }}
    build:
      binary_relocation: False
      runpath_whitelist:
        - $ORIGIN/../lib
      missing_dso_whitelist:
        - "/lib64/libgcc_s.so.*"
        - "/lib64/librt.so.*"
        - "/lib64/libpthread.so.*"
        - "/lib64/libdl.so.*"
        - "/lib64/libc.so.*"
        - "/lib64/ld-linux-x86-64.so.*"  # [linux and x86_64]
      run_exports:
        strong:
          - {{ pin_subpackage("rust", exact=True) }}
    script: install-rust-std-extra.sh  # [unix]
    script: install-rust-std-extra.bat  # [win]
    requirements:
      build:
        - posix  # [win]
    test:
      commands:
        - echo ON  # [win]
        - test -f $PREFIX/lib/rustlib/{{ rust_std_extra }}/lib/libcore*.rlib  # [unix]
        # Make sure that the outputs do not clobber with other rust components
        - test -f $PREFIX/lib/rustlib/{{ rust_std_extra }}/lib/self-contained/libc.a  # [unix]
        - rustc --print target-list | grep {{ rust_std_extra }}  # [unix]
      requires:
        - {{ pin_subpackage('rust', exact=True) }}  # [unix]

about:
  home: https://www.rust-lang.org
  license: MIT AND Apache-2.0
  license_family: OTHER
  license_url: https://github.com/rust-lang/rust/blob/{{ version }}/COPYRIGHT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
  description: |
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://github.com/rust-lang/rust
  doc_url: https://www.rust-lang.org/learn

extra:
  # The license files cannot be found properly on Windows
  skip-lints:
    - missing_license_file
  recipe-maintainers:
    - abhi18av
    - dlaehnemann
    - johanneskoester
    - pkgw
    - katietz
