{% set version = "1.34.1" %}

package:
  name: 'rust-suite'
  version: {{ version }}

source:
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux]
    sha256: 8e2eead11bd5bf61409e29018d007c6fc874bcda2ff54db3d04d1691e779c14e  # [linux]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx]
    sha256: f4e46b9994ccfab4a84059298d1dc8fd446b1bbb7449462e0459948f7debea0e  # [osx]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-i686-pc-windows-msvc.tar.gz  # [win32]
    sha256: 139233502977bb319c8cd28f9ef17b814747a2bc78c559284aa7df8bc78fed6e  # [win32]
    folder: msvc  # [win32]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-i686-pc-windows-gnu.tar.gz  # [win32]
    sha256: fe9d75fa4965b5e93f1b69c28b8d214cd5111c38139d66defe16cb5ce50374b3  # [win32]
    folder: gnu  # [win32]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]
    sha256: 3b771a51f680bdf38e8e799fb3d9a76370be02e5968a55f7650a96bda7a4a0f5  # [win64]
    folder: msvc  # [win64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-gnu.tar.gz  # [win64]
    sha256: 3f89a61710a370772c4d8238ef73b363e05d4fa0882043fac2b4208f652eeca4  # [win64]
    folder: gnu  # [win64]

build:
  number: 0
  # the distributed binaries are already relocatable
  binary_relocation: False
  runpath_whitelist:
    - $ORIGIN/../lib
  missing_dso_whitelist:
    - /usr/lib/libresolv.9.dylib
    - /usr/lib/libc++.1.dylib
    - /usr/lib/libc++abi.dylib
    - /usr/lib/libiconv.2.dylib
    - /usr/lib/libcurl.4.dylib
    - /usr/lib/libxar.1.dylib
    # Since 1.32.0 macOS also needs:
    - /System/Library/Frameworks/Python.framework/Versions/2.7/Python
    - /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols
    - /usr/lib/libcompression.dylib
    - /usr/lib/libedit.3.dylib
    - /usr/lib/libform.5.4.dylib
    - /usr/lib/libncurses.5.4.dylib
    - /usr/lib/libpanel.5.4.dylib
    - /usr/lib/libxml2.2.dylib
    # Fixed via install_name_tool now (just declaring it here meant the thing using -
    # lib/rustlib/x86_64-apple-darwin/lib/python2.7/site-packages/lldb/lldb-argdumper - was
    # still unable to find it at runtime).
    # - $RPATH/libLLVM.dylib

    - '**/ld-linux-x86-64.so.2'
    - '**/libc.so.6'
    - '**/libdl.so.2'
    - '**/libgcc_s.so.1'
    - '**/libm.so.6'
    - '**/libpthread.so.0'
    - '**/librt.so.1'
    - '**/libgcc_s.so.1'
    # Since 1.32.0 linux also needs:
    - '**/libstdc++.so.6'

requirements:
  build:
    - posix  # [win]
    # Just for install_name_tool, luckily macOS clang
    # has no run_exports for us to have to ignore.
    - {{ compiler('c') }}  # [osx]

outputs:
  - name: rust
    script: install-msvc.sh  # [win]
    script: install-unix.sh  # [not win]
    test:
      requires:
        - gcc_impl_linux-64  # [linux]
        - clang_osx-64  # [osx]
        - posix  # [win]
      files:
        - forge_test.sh
      commands:
        - time bash ./forge_test.sh  # [not win]
        - bash forge_test.sh  # [win]

  - name: rust-gnu  # [win]
    script: install-gnu.sh  # [win]
    test:
      requires:
        - gcc_impl_linux-64  # [linux]
        - clang_osx-64  # [osx]
        - posix  # [win]
      files:
        - forge_test.sh
      commands:
        - time bash ./forge_test.sh  # [not win]
        - bash forge_test.sh  # [win]

about:
  home: https://www.rust-lang.org
  license: MIT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://doc.rust-lang.org/std/
  doc_url: https://www.rust-lang.org/en-US/documentation.html

extra:
  recipe-maintainers:
    - abhi18av
    - dlaehnemann
    - johanneskoester
    - mingwandroid
    - pkgw
