{% set version = "1.76.0.dev20231115" %}
{% set version_main = "1.76.0" %}
{% set nightly_date = "2023-11-15" %}

package:
  name: 'rust-suite'
  version: {{ version }}

# skipping s390x because nightly rust is only necessary for specific customer packages
source:
  - url: https://static.rust-lang.org/dist/{{ nightly_date }}/rust-nightly-x86_64-unknown-linux-gnu.tar.gz  # [linux64]
    sha256: 635c4928063be3eb2217e6c7d79634d5d2861ebb6900ce6351a92f264c4dbc38                                # [linux64]
  - url: https://static.rust-lang.org/dist/{{ nightly_date }}/rust-nightly-aarch64-unknown-linux-gnu.tar.gz  # [aarch64]
    sha256: 1556c1fa6420099a95c822d2afe82a224e3099154672a6a1a36b96bcb1d134b3                                 # [aarch64]
  - url: https://static.rust-lang.org/dist/2023-11-15/rust-nightly-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    sha256: 426536321be65ba4354127ebe34473aebc3a0ad98c1f098540adc626c4453554                   # [osx and x86_64]
  - url: https://static.rust-lang.org/dist/{{ nightly_date }}/rust-nightly-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    sha256: 1bd6778d4c60494b7a9d9e08f47d2ad39074763c52e3baa017dc2221ae466db4                            # [osx and arm64]
  - url: https://static.rust-lang.org/dist/{{ nightly_date }}/rust-nightly-x86_64-pc-windows-msvc.tar.gz  # [win]
    sha256: 1d3b44c04a5b8ce1e7fe47bbf1c51a96e7aa31cc7770272d5b689777afe646ab                              # [win]
    folder: msvc                                                                                          # [win]
  - url: https://static.rust-lang.org/dist/{{ nightly_date }}/rust-nightly-x86_64-pc-windows-gnu.tar.gz  # [win]
    sha256: 70552d0ef9c672b3e5c234bde505dfa4071a91039cc75fa7947a968c0eed90be                             # [win]
    folder: gnu                                                                                          # [win]

build:
  skip: True  # [s390x]
  number: 0

outputs:
  - name: rust
    script: install-msvc.bat  # [win]
    script: install-unix.sh  # [not win]
    build:
      run_exports: # [osx and x86_64]
        strong_constrains: # [osx and x86_64]
          - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.12") }}  # [osx and x86_64]
      # the distributed binaries are already relocatable
      binary_relocation: False
      runpath_whitelist:
        - $ORIGIN/../lib
      missing_dso_whitelist:
        # - /usr/lib/libresolv.9.dylib                                                        # [osx]
        # - /usr/lib/libc++.1.dylib                                                           # [osx]
        # - /usr/lib/libc++abi.dylib                                                          # [osx]
        # - /usr/lib/libiconv.2.dylib                                                         # [osx]
        # - /usr/lib/libcurl.4.dylib                                                          # [osx]
        # - /usr/lib/libxar.1.dylib                                                           # [osx]
        # - $RPATH/libLLVM-14-rust-1.64.0-stable.so                                           # [osx]
        # # Since 1.32.0 macOS also needs:
        # - /System/Library/Frameworks/Python.framework/Versions/2.7/Python                   # [osx]
        # - /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols  # [osx]
        # - /usr/lib/libcompression.dylib                                                     # [osx]
        # - /usr/lib/libedit.3.dylib                                                          # [osx]
        # - /usr/lib/libform.5.4.dylib                                                        # [osx]
        # - /usr/lib/libncurses.5.4.dylib                                                     # [osx]
        # - /usr/lib/libpanel.5.4.dylib                                                       # [osx]
        # - /usr/lib/libxml2.2.dylib                                                          # [osx]
        # Fixed via install_name_tool now (just declaring it here meant the thing using -
        # lib/rustlib/x86_64-apple-darwin/lib/python2.7/site-packages/lldb/lldb-argdumper - was
        # still unable to find it at runtime).
        # - $RPATH/libLLVM.dylib

        - '**/ld-linux-x86-64.so.2'        # [linux]
        - '**/libc.so.6'                   # [linux]
        - '**/libdl.so.2'                  # [linux]
        - '**/ld64.so.*'                   # [linux]
        - '**/libgcc_s.so.1'               # [linux]
        - '**/libm.so.6'                   # [linux]
        - '**/libpthread.so.0'             # [linux]
        - '**/librt.so.1'                  # [linux]
        - '**/libgcc_s.so.1'               # [linux]
        - '**/libz.so.1'                   # [linux]
        # Since 1.32.0 linux also needs:
        - '**/libstdc++.so.6'              # [linux]
    requirements:
      build:
        - {{ compiler('c') }}    # [osx]
        - posix  # [win]
    test:
      requires:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      files:
        - forge_test.sh  # [not win]
      commands:
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]
        - rustc --version
        - cargo --help
        - rustc --help
        - rustdoc --help
        - time bash ./forge_test.sh  # [not win]

  - name: rust-gnu  # [win]
    script: install-gnu.bat  # [win]
    build:  # [win]
      # the distributed binaries are already relocatable
      binary_relocation: False  # [win]
    requirements:  # [win]
      build:  # [win]
        - posix # [win]
    test:  # [win]
      commands:  # [win]
        - rustc --version  # [win]
        - cargo --help  # [win]
        - rustc --help  # [win]
        - rustdoc --help  # [win]
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]

about:
  home: https://www.rust-lang.org
  license: MIT AND Apache-2.0
  license_family: OTHER
  license_url: https://github.com/rust-lang/rust/blob/{{ version_main }}/COPYRIGHT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
  description: |
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://github.com/rust-lang/rust
  doc_url: https://www.rust-lang.org/learn

extra:
  # The license files cannot be found properly on Windows
  skip-lints:
    - missing_license_file
  recipe-maintainers:
    - abhi18av
    - dlaehnemann
    - johanneskoester
    - pkgw
    - katietz
